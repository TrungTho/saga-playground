package constants

import "time"

// ERROR constants
const (
	// general
	OK                = "OK"
	ERROR_INTERNAL    = "INTERNAL_ERROR"
	ERROR_BAD_REQUEST = "BAD_REQUEST"
	ERROR_NOT_FOUND   = "NOT_FOUND"
	INVALID_ACTION    = "INVALID_ACTION"

	// order
	ERROR_ORDER_NOT_FOUND             = "ERROR_ORDER_NOT_FOUND"
	ERROR_ORDER_DTO_CONVERT           = "ERROR_DTO_CONVERT"
	ERROR_ORDER_CREATE_FAILED         = "ERROR_ORDER_CREATE_FAILED"
	ERROR_ORDER_UPDATE_FAILED         = "ERROR_ORDER_UPDATE_FAILED"
	ERROR_ORDER_CANCEL_FAILED         = "ERROR_ORDER_CANCEL_FAILED"
	ERROR_ORDER_CANCEL_INVALID_STATUS = "ERROR_ORDER_CANCEL_INVALID_STATUS"
	ERROR_ORDER_INVALID_STATUS        = "ERROR_ORDER_INVALID_STATUS"
	ERROR_ORDER_RPC_START_PAYMENT     = "ERROR_ORDER_RPC_START_PAYMENT"

	// message broker
	ERROR_HANDLER_NOT_EXIST        = "ERROR_HANDLER_NOT_EXIST"
	ERROR_HANDLER_DUPLICATION      = "ERROR_HANDLER_DUPLICATION"
	ERROR_CONSUMER_INITIALIZATION  = "ERROR_CONSUMER_INITIALIZATION"
	ERROR_CHECKOUT_MESSAGE_PARSING = "ERROR_CHECKOUT_MESSAGE_PARSING"
)

// LOG event constants
const (
	ORDER_CREATED        = "ORDER_CREATED"
	ORDER_CANCELLED      = "ORDER_CANCELLED"
	ORDER_STATUS_CHANGED = "ORDER_STATUS_CHANGED"
)

// Distributed lock constants
const (
	LOCK_SUCCESSFUL_CHECKOUT = "inbox:checkout:successful"
)

const (
	LOCK_SUCCESSFUL_TTL_SECOND = 60 * time.Second
)

// Message broker constant
const (
	CONSUMER_GROUP_ID      = "service.order"
	AUTO_OFFSET_RESET_MODE = "earliest"
	TOPIC_CHECKOUT_STATUS  = "checkout.status.update"
	TOPIC_TEST             = "test"
	BATCH_SIZE             = 5
)

const (
	CHECKOUT_STATUS_FINALIZED = "FINALIZED"
	CHECKOUT_STATUS_FAILED    = "FAILED"
)
